name: Deploy to EKS

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get the last 6 characters of the Git hash
      id: get_commit
      run: echo "::set-output name=short_sha::$(git rev-parse --short=6 HEAD)"
    
    - name: Build Docker image
      run: docker build -t ajsosamartinez/alan_app_test:${{ steps.get_commit.outputs.short_sha }} -f docker/Dockerfile .

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push image to Docker Hub
      run: docker push ajsosamartinez/alan_app_test:${{ steps.get_commit.outputs.short_sha }}

    - name: Asume role
      id: assume_role
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_ROLE_NAME }}
        role-duration-seconds: 3600
        aws-region: ${{ vars.AWS_REGION }}

    - name: Set up Kubeconfig
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name ${{ vars.AWS_CLUSTER }} --region ${{ vars.AWS_REGION }}

    - name: Update deployment with new image tag
      run: |
        sed -i 's|ajsosamartinez/alan_app_test:latest|ajsosamartinez/alan_app_test:${{ steps.get_commit.outputs.short_sha }}|g' manifest/deployment.yaml
        cat manifest/deployment.yaml  # Este comando es solo para depuraci√≥n, para verificar que el archivo ha sido actualizado correctamente.

    - name: Apply Kubernetes Deployment
      run: kubectl apply -f manifest/deployment.yaml

    - name: Apply Kubernetes Service
      run: kubectl apply -f manifest/service.yaml

    - name: Apply Kubernetes Ingress
      run: kubectl apply -f manifest/ingress.yaml
